# Installing ORx on Raspberry Pi with Raspbian

This document describes the prerequisites and steps for creating a home-made
Outernet Receiver.

## What you need

You will need the following:

- Satellite dish (60cm or larger)
- LNB (must support Ku band)
- USB satellite tuner (see below for devices know to work)
- Raspberry Pi (model B or B+ recommended)
- Internet connection
- HDMI cable for display connection (or HDMI-DVI, HDMI-VGA and similar
  convertors)
- USB keyboard
- Micro USB cable or AC power adaptor for Raspberry Pi
- SD card (4GB or more should be fine)
- (optional) Wi-Fi dongle (see below for supported devices)

## Point the dish

See *Transponders* section for information on where you should point your dish.

## Prepare for software install

This section is intended for people who are not familiar with Raspberry Pi.
Experienced users may safely skip to next section.

Format the SD card and unpack [NOOBS](http://www.raspberrypi.org/downloads/).
Insert the card into the card slot on Raspberry Pi. Attach the display's HDMI
cable and USB keyboard. Connect the Ethernet cable. Finally, connect the micro
USB cable or AC adaptor.

Once NOOBS boots up, it will display a choice of operating systems it can
install. Mark RaspBMC (use arrow keys to navigate and space to mark) and
proceed (press i key to install).

When the system is installed, press OK and Raspberry Pi will reboot. The first
time you boot it, RaspBMC will perform initial configuration and boot into
XBMC. In some cases it may also choose to download updates. It is strongly
recommended you allow it to finish.

This would also be a good time to disable the web server or change its port. 
Go to *System* then *Services*, then *Webserver* and disable *Allow control of
XBMC though HTTP* or change the port to something other than 80.

Once booted, you can get into the shell by using the *power-off button* (second
button in the lower left corner) and choosing the *Exit* option. When a text
message appears, press Esc.

You can also SSH into RaspBMC without exiting XBMC. In either case, you can use
the username 'pi' and password 'raspberry' to log in.

When you log into shell for the first time, you will be asked to configure the
locale and location information. Skipping this has no effect on ORx operation,
but you may want to do it anyway to prevent future logins from starting the
setup program. Note that selecting multiple locales may take a lot more time
than selecting just one.

## Install Outernet software and TVHeadend

Before you begin, you must make sure the XBMC web server is disabled or runs on
a port other than port 80. If you haven't done this in the preparation step, go
to XBMC interface, go into *System* section, then *Services*, and then 
*Webserver*.  Disable *Allow control of XBMC though HTTP* or change the port to
something other than 80.

To install the base software for Outernet Receiver, you must first be root:

    sudo su

You can then use our install script:

    wget https://raw.githubusercontent.com/Outernet-Project/orx-install/master/raspbmc/install.sh
    bash install.sh

Alternatively, you can run the second command with `sudo`.

If the `wget` command fails with `ERROR: The certificate of
'raw.githubusercontent.com' is not trusted.`, try installing the
`ca-certificates` package:

    apt-get update && apt-get install ca-certificates

The script will do the following:

1. add jessie repository to the list of package repositories
1. installs necessary packages (python3.4 python3.4-dev python3-setuptools)
1. installs firmwares for supported DVB-S/S2 tuners (see list below)
1. installs Outernet Data Delivery agent package
1. installs Outernet Librarian
1. Creates Librarian system service
1. Creates necessary directories
1. Configures and starts Librarian

You can troubleshoot problems during the install by looking at `install.log`
file created in the same directory where you started the install script.

## Upgrade the kernel

Upgrading the kernel may be necessary for newer USB DVB-S/S2 tuners. This topic
is outside the scope of this document. Generally, you have two options. You can
try using the
[rpi-update](http://www.raspberrypi.org/documentation/raspbian/updating.md)
tool, or [compile the kernel
yourself](http://elinux.org/RPi_Kernel_Compilation).

## Attach the DVB-S/S2 tuner

Attach your DVB-S/S2 tuner to the USB port (you may need a USB hub depending on
Raspberry Pi model).

## Restart Raspberry Pi

Restart Raspberry Pi. You can issue the reboot command, or simply unplug and
plug back in the micro USB cable or AC adaptor.

## Tune into an Outernet transponder

Before you can access TVHeadend you need to enable it. To do that, go to XBMC,
then *Programs*, then open *RaspBMC configuration* icon, then open the 
*System Configuration* tab, then find the *Service management* section and
enable TVHeadend. Click *OK* to save the settings. TVHeadend should become
available shortly.

If you want to add muxes manually, you can find more information in the
*Transponders* section.

Once Raspberry Pi is booted, access its IP address and port 9981. For instance,
if your Raspberry Pi IP address is 192.168.10.247, you will access
192.168.10.247:9981. This brings up the TVHeadend interface.

![TVHeadend: choosing DVB interface](../img/00_tvheadend.png)

Check the *Enabled* checkbox for your tuner, and click Save.

![TVHeadend: enabling DVB interface](../img/01_enable.png)

Click the *Add DVB Network by location...* button on the left and find your
satellite.

![TVHeadend: add network](../img/02_network.png)

TVHeadend will start performing the initial scan to get the names of all
channels. Give it a few minutes, then switch over to *Services* tab.

![TVHeadend: services](../img/03_map.png)

Locate Outernet service from the list and click the *Map selected* button in 
the toolbar above.

Finally, click the *play* link next to the service name.

Switch over to the *Status* tab at the top of the interface.

![TVHeadend: status](../img/04_status.png)

You should see signal strength there.

After you have performed the above steps, Outernet Data Delivery agent should
start receiving files.

## Access Librarian

You can access Librarian by pointing your browser to Raspberry Pi's IP address.
It runs as web browser so there is no need to type in any port number.

Using Librarian is outside the scope of this document so we won't go into
details here.

## Convert your receiver to access point

For convenience, we have provided a script that converts your Raspberry Pi into
a Wi-Fi access point. Advanced users may prefer to configure everything
themselves, though.

Access point configuration is based on hostapd. It also performs DNS spoofing
so that any address resolves to the device's IP address.

There are many Wi-Fi dongles that can potentially be used for this purpose. Our
scripts has only been tested with the devices listed in the *Supported USB
Wi-Fi dongles* section.

Get the script that matches your dongle's chipset:

    wget https://raw.githubusercontent.com/Outernet-Project/orx-install/master/raspbmc/setap.sh

To start the conversion, plug in your device and simply run the script:

    bash setap.sh

The script will perform the following modifications:

1. Install necessary packages (hostapd isc-dhcp-server dsniff)
1. Check that the device uses the supported drivers
1. Check that hostapd supports the device
1. Takes away control over Wi-Fi interface from network-manager
1. Configures Wi-Fi interface to use static IP
1. Configure hostapd
1. Configure DHCP server
1. Configure DNS spoofing
1. Start the access point

Because of the way networking is handled in RaspBMC, a few customizations
needed to be performed by this script. Namely, it reconfigures the Wi-Fi
interface so that network-manager no longer controls it. This also means that
you will not be able to control Wi-Fi configuration through RaspBMC
configuration program.

A new upstart job is created that restarts the wireless interface and emits the
`wifi-done` event. Custom isc-dhcp-server and hostapd upstart jobs are also
installed that use this event instead of standard network-related events.

If the access point is not up immediately after the script runs, try waiting a
little until all services are properly initialized. If waiting doesn't help,
try rebooting the system. You can troubleshoot problems during install by
taking a look at `setap.log` file created in the same directory where you ran
the script.

You can customize many of the network-related settings by editing the values
near the top of the script file. This includes the subnet and IP address of the
access point, the SSID and password, and so on.

## Supported USB DVB-S/S2 tuners

- PCTV 460e
- PCTV 461e (requires kernel newer than v3.14)
- Geniatech HDStar TV box

## Supported USB Wi-Fi dongles

- TP-Link TL-WN722N (Atheros)
- Edimax EW-7811UN (Realtek)

## Transponders

These are the currently active transponders:

- North America: Galaxy 19 (97.0°W) 12,177 V 23,000 3/4
- Europe: HotBird (13.0°E) 11,470 V 27,500 5/6


